apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.myapp.uploadgallery"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.myapp.uploadgallery.MockTestRunner"


        buildConfigField "String", "API_URL", "\"https://polar-bastion-91741.herokuapp.com\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    configurations.all {
        resolutionStrategy {
            force 'com.google.code.findbugs:jsr305:1.3.9'
            force 'com.android.support:support-annotations:23.1.1'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions.incremental = false
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    def espressoVersion = '3.0.1'
    def espressoIntents = '3.0.1'
//    compile "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-intents:$espressoIntents", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    androidTestCompile ('com.android.support.test:runner:1.0.0') {
//        exclude module: 'support-annotations'
//    }
//    androidTestCompile ('com.android.support.test:rules:1.0.0') {
//        exclude module: 'support-annotations'
//    }

    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.android.support:design:26.+'
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.34'

    def daggerVersion = '2.11'
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    androidTestCompile "com.google.dagger:dagger:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'

    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.android.support:recyclerview-v7:26.0.0'

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    def retrofitVersion = '2.3.0'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    compile 'net.danlew:android.joda:2.9.4.1'

    compile 'com.isseiaoki:simplecropview:1.1.6'

    compile 'org.mockito:mockito-core:2.7.12'
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${variant.unitTestVariant.dirName}")
        variant.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }
}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
